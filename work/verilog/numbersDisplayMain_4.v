/*
   This file was generated automatically by the Mojo IDE version B1.3.5.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module numbersDisplayMain_4 (
    input clk,
    input rst,
    input [3:0] p1Score,
    input [3:0] p2Score,
    output reg [3:0] digitPins,
    output reg [6:0] segmentPins
  );
  
  
  
  reg [15:0] M_timer_d, M_timer_q = 1'h0;
  reg [1:0] M_digit_d, M_digit_q = 1'h0;
  
  wire [7-1:0] M_numbersDisplay_digitDisplay;
  reg [4-1:0] M_numbersDisplay_score;
  numbersDisplay_6 numbersDisplay (
    .score(M_numbersDisplay_score),
    .digitDisplay(M_numbersDisplay_digitDisplay)
  );
  
  always @* begin
    M_digit_d = M_digit_q;
    M_timer_d = M_timer_q;
    
    M_numbersDisplay_score = 4'hf;
    digitPins = 4'h0;
    segmentPins = 7'h00;
    if (M_digit_q == 2'h0) begin
      M_timer_d = M_timer_q + 1'h1;
      digitPins = 4'hf;
      digitPins[0+0-:1] = 1'h0;
      M_numbersDisplay_score = p1Score;
      segmentPins = M_numbersDisplay_digitDisplay;
      if (M_timer_q == 16'h61a8) begin
        M_timer_d = 16'h0000;
        M_digit_d = M_digit_q + 1'h1;
      end
    end else begin
      if (M_digit_q == 2'h1) begin
        M_timer_d = M_timer_q + 1'h1;
        digitPins = 4'hf;
        digitPins[1+0-:1] = 1'h0;
        M_numbersDisplay_score = 4'hf;
        segmentPins = M_numbersDisplay_digitDisplay;
        if (M_timer_q == 16'h61a8) begin
          M_timer_d = 16'h0000;
          M_digit_d = M_digit_q + 1'h1;
        end
      end else begin
        if (M_digit_q == 2'h2) begin
          M_timer_d = M_timer_q + 1'h1;
          digitPins = 4'hf;
          digitPins[2+0-:1] = 1'h0;
          M_numbersDisplay_score = 4'hf;
          segmentPins = M_numbersDisplay_digitDisplay;
          if (M_timer_q == 16'h61a8) begin
            M_timer_d = 16'h0000;
            M_digit_d = M_digit_q + 1'h1;
          end
        end else begin
          if (M_digit_q == 2'h3) begin
            M_timer_d = M_timer_q + 1'h1;
            digitPins = 4'hf;
            digitPins[3+0-:1] = 1'h0;
            M_numbersDisplay_score = p2Score;
            segmentPins = M_numbersDisplay_digitDisplay;
            if (M_timer_q == 16'h61a8) begin
              M_timer_d = 16'h0000;
              M_digit_d = M_digit_q + 1'h1;
            end
          end
        end
      end
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_timer_q <= 1'h0;
      M_digit_q <= 1'h0;
    end else begin
      M_timer_q <= M_timer_d;
      M_digit_q <= M_digit_d;
    end
  end
  
endmodule
