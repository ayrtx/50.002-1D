/*
   This file was generated automatically by the Mojo IDE version B1.3.5.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module scoreMem_6 (
    input clk,
    input rst,
    input [0:0] p1Lost,
    input [0:0] p2Lost,
    output reg [3:0] p1Score,
    output reg [3:0] p2Score
  );
  
  
  
  wire [1-1:0] M_alu_z;
  wire [1-1:0] M_alu_v;
  wire [1-1:0] M_alu_n;
  wire [8-1:0] M_alu_out;
  reg [6-1:0] M_alu_alufn;
  reg [8-1:0] M_alu_a;
  reg [8-1:0] M_alu_b;
  alu_1 alu (
    .alufn(M_alu_alufn),
    .a(M_alu_a),
    .b(M_alu_b),
    .z(M_alu_z),
    .v(M_alu_v),
    .n(M_alu_n),
    .out(M_alu_out)
  );
  
  reg [3:0] M_curp1Score_d, M_curp1Score_q = 1'h0;
  
  reg [3:0] M_curp2Score_d, M_curp2Score_q = 1'h0;
  
  always @* begin
    M_curp1Score_d = M_curp1Score_q;
    M_curp2Score_d = M_curp2Score_q;
    
    M_alu_alufn = 5'h00;
    M_alu_a = 8'h00;
    M_alu_b = 8'h00;
    if (p1Lost == 1'h1 && p2Lost == 1'h1) begin
      
    end else begin
      if (p1Lost == 1'h1) begin
        if (M_curp2Score_q == 4'h9) begin
          M_curp2Score_d = 4'h0;
        end else begin
          M_alu_alufn = 5'h00;
          M_alu_a = M_curp2Score_q;
          M_alu_b = 4'h1;
          M_curp2Score_d = M_alu_out;
        end
      end else begin
        if (p2Lost == 1'h1) begin
          if (M_curp1Score_q == 4'h9) begin
            M_curp1Score_d = 4'h0;
          end else begin
            M_alu_alufn = 5'h00;
            M_alu_a = M_curp1Score_q;
            M_alu_b = 4'h1;
            M_curp1Score_d = M_alu_out;
          end
        end
      end
    end
    p1Score = M_curp1Score_q;
    p2Score = M_curp2Score_q;
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_curp1Score_q <= 1'h0;
    end else begin
      M_curp1Score_q <= M_curp1Score_d;
    end
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_curp2Score_q <= 1'h0;
    end else begin
      M_curp2Score_q <= M_curp2Score_d;
    end
  end
  
endmodule
