module timechange (
    input clk,    // clock
    input rst,    // reset
    input ledArray[16][16],
    output inputsToCircuit [8]  // declares an output currentCounter with 26 bits
  ) {
  
  .clk(clk) {
    .rst(rst){
      fsm state(.clk(clk), #INIT(START)) = {ONE,TWO,THREE,START};
      dff i[4];
      dff j[4];
      dff k[4];
      dff time[16];
      }
    }


  always {
    inputsToCircuit = c{0,0,0,0,0,0,0,0};
    case(state.q){
      state.ONE:
        inputsToCircuit[4] = 1;
        inputsToCircuit[7] = 0;
        inputsToCircuit[5] = 0;
        inputsToCircuit[6] = clk - 1;
        if (j.q == 0){
          state.d = state.TWO;
          j.d = 15;
          }
        else{
          j.d = j.q - 1;
          }

      state.TWO:
        inputsToCircuit[3] = k.q[0];
        inputsToCircuit[2] = k.q[1];
        inputsToCircuit[1] = k.q[2];
        inputsToCircuit[0] = k.q[3];
        inputsToCircuit[7] = 0;
        inputsToCircuit[4] = 1;
        inputsToCircuit[5] = ledArray[i.q][j.q];
        inputsToCircuit[6] = clk - 1;
        if (j.q == 0){
          state.d = state.THREE;
          j.d = 15;
          }
        else{
          j.d = j.q - 1;
          }

     
    state.THREE:
        inputsToCircuit[3] = k.q[0];
        inputsToCircuit[2] = k.q[1];
        inputsToCircuit[1] = k.q[2];
        inputsToCircuit[0] = k.q[3];
        
        inputsToCircuit[7] = 1;
        inputsToCircuit[4] = 0;
        time.d = time.q + 1;

        if (time.q == b0110000110101000){
          time.d = 0;
          if (i.q == 0){
            state.d = state.START;
            }
         else{
          i.d = i.q - 1;
          k.d = k.q + 1;
          state.d = state.ONE;
            }
        }
        
      state.START:
        i.d = 15;
        j.d = 15;
        k.d = 0;
        time.d = 0;
        state.d = state.ONE;
    }
  }
}